{"version":3,"file":"immer.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { Plugin, Models } from '@rematch/core'\nimport produce from 'immer'\nimport Redux from 'redux'\n\nexport type ImmerPluginConfig = {\n\twhitelist?: string[]\n\tblacklist?: string[]\n}\n\nfunction wrapReducerWithImmer(reducer: Redux.Reducer) {\n\treturn (state: any, payload: any): any => {\n\t\tif (state === undefined) return reducer(state, payload)\n\t\treturn produce(state, (draft: any) => reducer(draft, payload))\n\t}\n}\n\nconst immerPlugin = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels> = Record<string, never>\n>(\n\tconfig?: ImmerPluginConfig\n): Plugin<TModels, TExtraModels> => ({\n\tonReducer(reducer: Redux.Reducer, model: string): Redux.Reducer | void {\n\t\tif (\n\t\t\t!config ||\n\t\t\t(!config.whitelist && !config.blacklist) ||\n\t\t\t(config.whitelist && config.whitelist.includes(model)) ||\n\t\t\t(config.blacklist && !config.blacklist.includes(model))\n\t\t) {\n\t\t\treturn wrapReducerWithImmer(reducer)\n\t\t}\n\n\t\treturn undefined\n\t},\n})\n\nexport default immerPlugin\n"],"names":["wrapReducerWithImmer","reducer","state","payload","undefined","produce","draft","immerPlugin","config","onReducer","model","whitelist","blacklist","includes"],"mappings":";;;;;;;;;;AASA,SAASA,oBAAT,CAA8BC,OAA9B;AACC,SAAO,UAACC,KAAD,EAAaC,OAAb;AACN,QAAID,KAAK,KAAKE,SAAd,EAAyB,OAAOH,OAAO,CAACC,KAAD,EAAQC,OAAR,CAAd;AACzB,WAAOE,2BAAO,CAACH,KAAD,EAAQ,UAACI,KAAD;AAAA,aAAgBL,OAAO,CAACK,KAAD,EAAQH,OAAR,CAAvB;AAAA,KAAR,CAAd;AACA,GAHD;AAIA;;IAEKI,WAAW,GAAG,SAAdA,WAAc,CAInBC,MAJmB;AAAA,SAKiB;AACpCC,IAAAA,SADoC,qBAC1BR,OAD0B,EACFS,KADE;AAEnC,UACC,CAACF,MAAD,IACC,CAACA,MAAM,CAACG,SAAR,IAAqB,CAACH,MAAM,CAACI,SAD9B,IAECJ,MAAM,CAACG,SAAP,IAAoBH,MAAM,CAACG,SAAP,CAAiBE,QAAjB,CAA0BH,KAA1B,CAFrB,IAGCF,MAAM,CAACI,SAAP,IAAoB,CAACJ,MAAM,CAACI,SAAP,CAAiBC,QAAjB,CAA0BH,KAA1B,CAJvB,EAKE;AACD,eAAOV,oBAAoB,CAACC,OAAD,CAA3B;AACA;;AAED,aAAOG,SAAP;AACA;AAZmC,GALjB;AAAA;;;;"}