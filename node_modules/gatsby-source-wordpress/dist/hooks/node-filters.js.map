{"version":3,"file":"node-filters.js","names":["applyNodeFilter","name","context","data","nodeFilters","getStore","getState","wpHooks","length","sortedNodeFilters","sort","a","b","priority","filter","addNodeFilter","dispatch"],"sources":["../../src/hooks/node-filters.ts"],"sourcesContent":["import { IJSON } from \"../utils/fetch-graphql\"\nimport { getStore } from \"~/store\"\n\ninterface INodeFilterInput {\n  name: string\n  context: IJSON\n  data: IJSON\n}\n\ntype NodeFilterFn = (INodeFilterInput) => IJSON\n\ninterface INodeFilter {\n  name: string\n  filter: NodeFilterFn\n  priority: number\n}\n\n/**\n * Grabs an array of filter functions from the redux store,\n * orders them by priority, and then runs each in order over the\n * passed in data. The modified data is then returned\n *\n * @param {string} name The name of the filter to apply\n * @param {object} context Any additional data to pass to the filter functions that are applied\n * @param {object} data The initial data to be filtered\n */\nexport const applyNodeFilter = async ({\n  name,\n  context,\n  data,\n}: INodeFilterInput): Promise<IJSON> => {\n  if (!name) {\n    return data\n  }\n\n  const nodeFilters: Array<INodeFilter> =\n    getStore().getState().wpHooks.nodeFilters?.[name]\n\n  if (!nodeFilters || !nodeFilters.length) {\n    return data\n  }\n\n  const sortedNodeFilters = nodeFilters.sort((a, b) => a.priority - b.priority)\n\n  for (const { filter } of sortedNodeFilters) {\n    data = filter({ data, context, name })\n  }\n\n  return data\n}\n\n/**\n * This function adds a filter to the internal redux store of filters\n * To be applied via applyNodeFilter above\n *\n * @param {string} name The name of the filter\n * @param {function} filter The function to run when applying this filter\n * @param {integer} priority The priority for this filter to run in. lower means earlier execution\n */\nexport const addNodeFilter = ({\n  name,\n  filter,\n  priority,\n}: INodeFilter): void => {\n  getStore().dispatch.wpHooks.addNodeFilter({ name, filter, priority })\n}\n"],"mappings":";;;;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,eAAe,GAAG,OAAO;EACpCC,IAAI;EACJC,OAAO;EACPC;AACgB,CAAC,KAAqB;EAAA;EACtC,IAAI,CAACF,IAAI,EAAE;IACT,OAAOE,IAAI;EACb;EAEA,MAAMC,WAA+B,4BACnC,IAAAC,eAAQ,GAAE,CAACC,QAAQ,EAAE,CAACC,OAAO,CAACH,WAAW,0DAAzC,sBAA4CH,IAAI,CAAC;EAEnD,IAAI,CAACG,WAAW,IAAI,CAACA,WAAW,CAACI,MAAM,EAAE;IACvC,OAAOL,IAAI;EACb;EAEA,MAAMM,iBAAiB,GAAGL,WAAW,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,QAAQ,GAAGD,CAAC,CAACC,QAAQ,CAAC;EAE7E,KAAK,MAAM;IAAEC;EAAO,CAAC,IAAIL,iBAAiB,EAAE;IAC1CN,IAAI,GAAGW,MAAM,CAAC;MAAEX,IAAI;MAAED,OAAO;MAAED;IAAK,CAAC,CAAC;EACxC;EAEA,OAAOE,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQO,MAAMY,aAAa,GAAG,CAAC;EAC5Bd,IAAI;EACJa,MAAM;EACND;AACW,CAAC,KAAW;EACvB,IAAAR,eAAQ,GAAE,CAACW,QAAQ,CAACT,OAAO,CAACQ,aAAa,CAAC;IAAEd,IAAI;IAAEa,MAAM;IAAED;EAAS,CAAC,CAAC;AACvE,CAAC;AAAA"}