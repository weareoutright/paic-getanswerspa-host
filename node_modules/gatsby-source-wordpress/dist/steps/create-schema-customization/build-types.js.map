{"version":3,"file":"build-types.js","names":["unionType","typeBuilderApi","schema","type","pluginOptions","prefix","typePrefix","types","possibleTypes","filter","possibleType","typeIsExcluded","typeName","name","map","buildTypeName","length","resolveType","node","__typename","extensions","infer","filterTypeDefinition","buildUnionType","interfaceType","state","getStore","getState","ingestibles","remoteSchema","nodeInterfaceTypes","implementingTypes","getTypesThatImplementInterfaceType","transformedFields","transformFields","parentInterfacesImplementingTypes","parentType","fields","typeDef","includes","buildInterfaceType","objectType","gatsbyNodeTypes","fieldAliases","fieldBlacklist","Object","keys","description","interfaces","buildObjectType","enumType","buildEnumType","values","enumValues","reduce","accumulator"],"sources":["../../../src/steps/create-schema-customization/build-types.js"],"sourcesContent":["import { getStore } from \"~/store\"\nimport { transformFields } from \"./transform-fields\"\nimport { typeIsExcluded } from \"~/steps/ingest-remote-schema/is-excluded\"\nimport {\n  buildTypeName,\n  filterTypeDefinition,\n  getTypesThatImplementInterfaceType,\n} from \"./helpers\"\n\nconst unionType = typeBuilderApi => {\n  const { schema, type, pluginOptions } = typeBuilderApi\n  const prefix = pluginOptions.schema.typePrefix\n\n  const types = type.possibleTypes\n    .filter(\n      possibleType =>\n        !typeIsExcluded({\n          pluginOptions,\n          typeName: possibleType.name,\n        })\n    )\n    .map(possibleType => buildTypeName(possibleType.name, prefix))\n\n  if (!types || !types.length) {\n    return false\n  }\n\n  let unionType = {\n    name: buildTypeName(type.name, prefix),\n    types,\n    resolveType: node => {\n      if (node.__typename) {\n        return buildTypeName(node.__typename, prefix)\n      }\n\n      return null\n    },\n    extensions: {\n      infer: false,\n    },\n  }\n\n  // @todo add this as a plugin option\n  unionType = filterTypeDefinition(unionType, typeBuilderApi, `UNION`)\n\n  return schema.buildUnionType(unionType)\n}\n\nconst interfaceType = typeBuilderApi => {\n  const { type, schema, pluginOptions } = typeBuilderApi\n  const prefix = pluginOptions.schema.typePrefix\n\n  const state = getStore().getState()\n  const { ingestibles } = state.remoteSchema\n  const { nodeInterfaceTypes } = ingestibles\n\n  const implementingTypes = getTypesThatImplementInterfaceType(type)\n\n  const transformedFields = transformFields({\n    parentInterfacesImplementingTypes: implementingTypes,\n    parentType: type,\n    fields: type.fields,\n  })\n\n  if (!transformedFields) {\n    return null\n  }\n\n  let typeDef = {\n    name: buildTypeName(type.name, prefix),\n    fields: transformedFields,\n    extensions: { infer: false },\n  }\n\n  // this is a regular interface type, not a node interface type so we need to resolve the type name\n  if (!nodeInterfaceTypes.includes(type.name)) {\n    typeDef.resolveType = node =>\n      node?.__typename ? buildTypeName(node.__typename, prefix) : null\n  }\n\n  typeDef = filterTypeDefinition(typeDef, typeBuilderApi, `INTERFACE`)\n\n  return schema.buildInterfaceType(typeDef)\n}\n\nconst objectType = typeBuilderApi => {\n  const {\n    type,\n    gatsbyNodeTypes,\n    fieldAliases,\n    fieldBlacklist,\n    schema,\n    pluginOptions,\n  } = typeBuilderApi\n\n  const prefix = pluginOptions.schema.typePrefix\n\n  const transformedFields = transformFields({\n    fields: type.fields,\n    parentType: type,\n    gatsbyNodeTypes,\n    fieldAliases,\n    fieldBlacklist,\n  })\n\n  // if all child fields are excluded, this type shouldn't exist.\n  // check null first, otherwise cause:\n  // TypeError: Cannot convert undefined or null to object at Function.keys (<anonymous>)\n  // Also cause wordpress blog site build failure in createSchemaCustomization step\n  if (!transformedFields || !Object.keys(transformedFields).length) {\n    return false\n  }\n\n  let objectType = {\n    name: buildTypeName(type.name, prefix),\n    fields: transformedFields,\n    description: type.description,\n    extensions: {\n      infer: false,\n    },\n  }\n\n  if (type.interfaces?.includes(`Node`)) {\n    objectType.interfaces = [`Node`]\n  }\n\n  // @todo add this as a plugin option\n  objectType = filterTypeDefinition(objectType, typeBuilderApi, `OBJECT`)\n\n  return schema.buildObjectType(objectType)\n}\n\nconst enumType = ({ schema, type, pluginOptions }) =>\n  schema.buildEnumType({\n    name: buildTypeName(type.name, pluginOptions.schema.typePrefix),\n    values: type.enumValues.reduce((accumulator, { name }) => {\n      accumulator[name] = { name }\n\n      return accumulator\n    }, {}),\n    description: type.description,\n  })\n\nexport default { unionType, interfaceType, objectType, enumType }\n"],"mappings":"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"}