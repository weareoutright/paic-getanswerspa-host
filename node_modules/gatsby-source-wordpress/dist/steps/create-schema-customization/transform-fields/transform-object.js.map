{"version":3,"file":"transform-object.js","names":["transformListOfGatsbyNodes","field","fieldName","pluginOptions","prefix","schema","typePrefix","typeSDLString","introspectionFieldTypeToSDL","type","typeName","buildTypeName","findNamedTypeName","resolve","source","_args","context","nodes","Array","isArray","nodeModel","getNodesByIds","ids","map","node","id","buildGatsbyNodeObjectResolver","name","nodeField","existingNode","getNodeById","__typename","startsWith","queryInfo","getQueryInfoByTypeName","isLazyMediaItem","typeInfo","nodesTypeName","settings","lazyNodes","inPreviewMode","usingGatsbyV4OrGreater","fetchAndCreateSingleNode","actionType","singleName","singularName","helpers","getGatsbyApi","actions","createParentChildLink","parent","child","transformGatsbyNodeObject","transformerApi"],"sources":["../../../../src/steps/create-schema-customization/transform-fields/transform-object.js"],"sourcesContent":["import { buildTypeName } from \"~/steps/create-schema-customization/helpers\"\nimport { fetchAndCreateSingleNode } from \"~/steps/source-nodes/update-nodes/wp-actions/update\"\nimport { getQueryInfoByTypeName } from \"~/steps/source-nodes/helpers\"\nimport { getGatsbyApi } from \"~/utils/get-gatsby-api\"\nimport { inPreviewMode } from \"~/steps/preview/index\"\nimport { usingGatsbyV4OrGreater } from \"~/utils/gatsby-version\"\nimport { findNamedTypeName, introspectionFieldTypeToSDL } from \"../helpers\"\n\nexport const transformListOfGatsbyNodes = ({\n  field,\n  fieldName,\n  pluginOptions,\n}) => {\n  const prefix = pluginOptions.schema.typePrefix\n  const typeSDLString = introspectionFieldTypeToSDL(field.type)\n  const typeName = buildTypeName(findNamedTypeName(field.type), prefix)\n\n  return {\n    type: typeSDLString,\n    resolve: (source, _args, context) => {\n      let nodes = null\n\n      const field = source[fieldName]\n\n      if (field && Array.isArray(field)) {\n        nodes = field\n      } else if (Array.isArray(source?.nodes)) {\n        nodes = source.nodes\n      }\n\n      if (!nodes) {\n        return null\n      }\n\n      return context.nodeModel.getNodesByIds({\n        ids: nodes.map(node => node?.id),\n        type: typeName,\n      })\n    },\n  }\n}\n\nexport const buildGatsbyNodeObjectResolver =\n  ({ field, fieldName, pluginOptions }) =>\n  async (source, _args, context) => {\n    const prefix = pluginOptions.schema.typePrefix\n    const typeName = buildTypeName(field.type.name, prefix)\n    const nodeField = source[fieldName]\n\n    if (!nodeField || (nodeField && !nodeField.id)) {\n      return null\n    }\n\n    const existingNode = context.nodeModel.getNodeById({\n      id: nodeField.id,\n      type: typeName,\n    })\n\n    if (\n      existingNode?.__typename &&\n      !existingNode.__typename.startsWith(prefix)\n    ) {\n      existingNode.__typename = buildTypeName(existingNode.__typename, prefix)\n    }\n\n    if (existingNode) {\n      return existingNode\n    }\n\n    const queryInfo = getQueryInfoByTypeName(field.type.name)\n\n    if (!queryInfo) {\n      // if we don't have query info for a type\n      // it probably means this type is excluded in plugin options\n      return null\n    }\n\n    const isLazyMediaItem =\n      queryInfo.typeInfo.nodesTypeName === `MediaItem` &&\n      queryInfo.settings.lazyNodes\n\n    if (\n      // only fetch/create nodes in resolvers for media items when they have lazyNodes enabled\n      (!isLazyMediaItem &&\n        // but if we're in preview mode we want to lazy fetch nodes\n        // because if nodes are limited we still want to lazy fetch connections\n        !inPreviewMode()) ||\n      // lazyNodes option isn't supported in Gatsby v4+\n      usingGatsbyV4OrGreater\n    ) {\n      return null\n    }\n\n    // if this node doesn't exist, fetch it and create a node\n    const { node } = await fetchAndCreateSingleNode({\n      id: nodeField.id,\n      actionType: `CREATE`,\n      singleName: queryInfo.typeInfo.singularName,\n    })\n\n    if (source.id && node) {\n      const { helpers } = getGatsbyApi()\n\n      await helpers.actions.createParentChildLink({\n        parent: source,\n        child: node,\n      })\n    }\n\n    return node || null\n  }\n\nexport const transformGatsbyNodeObject = transformerApi => {\n  const { field, pluginOptions } = transformerApi\n  const typeName = buildTypeName(\n    field.type.name,\n    pluginOptions.schema.typePrefix\n  )\n\n  return {\n    type: typeName,\n    resolve: buildGatsbyNodeObjectResolver(transformerApi),\n  }\n}\n"],"mappings":"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"}